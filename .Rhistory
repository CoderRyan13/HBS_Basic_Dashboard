library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
household <- "SELECT * FROM hbs_household";
HHresults <- dbGetQuery(connection, household);
listingroster <- "SELECT * FROM hbs_listing_roster";
LRresults <- dbGetQuery(connection, listingroster);
malecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 1";
avgmale <- dbGetQuery(connection, malecount);
femalecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 2";
avgfemale <- dbGetQuery(connection, femalecount);
questnum <- nrow(HHresults);
nationaldatatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
Avg_Males = avgmale[1,1],
Avg_Females = avgfemale[1,1],
Avg_HH_Size = avgmale[1,1] + avgfemale[1,1]
)
View(HHresults)
View(LRresults)
library(bs4Dash)
library(reactable)
library(shinydashboard)
library(leaflet)
library(webr)
library(dplyr)
# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
household <- "SELECT * FROM hbs_household";
HHresults <- dbGetQuery(connection, household);
listingroster <- "SELECT * FROM hbs_listing_roster";
LRresults <- dbGetQuery(connection, listingroster);
View(HHresults)
View(LRresults)
malecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 1";
avgmale <- dbGetQuery(connection, malecount);
femalecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 2";
avgfemale <- dbGetQuery(connection, femalecount);
questnum <- nrow(HHresults);
nationaldatatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
Avg_Males = avgmale[1,1],
Avg_Females = avgfemale[1,1],
Avg_HH_Size = avgmale[1,1] + avgfemale[1,1]
)
View(nationaldatatable)
Umalecount <- "SELECT COUNT(*) AS sum
FROM hbs_listing_roster l WHERE l.sex = 1 AND b.urban_rural = 1
INNER JOIN hbs_household b ON b.interview__key = l.interview__key";
Uavgmale <- dbGetQuery(connection, Umalecount);
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
# creating a database connection
connectDB <- function(){
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
connection
}
fetchWholeTable <- function(table){
d2 <- connectDB()
data <- dbReadTable(d2, table)
dbDisconnect(d2)
data
}
household <- fetchWholeTable("hbs_household")
listing <- fetchWholeTable("hbs_listing_roster")
library(bs4Dash)
library(reactable)
library(shinydashboard)
library(leaflet)
library(webr)
library(dplyr)
# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connectDB <- function(){
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
connection
}
fetchWholeTable <- function(table){
d2 <- connectDB()
data <- dbReadTable(d2, table)
dbDisconnect(d2)
data
}
household <- fetchWholeTable("hbs_household")
listing <- fetchWholeTable("hbs_listing_roster")
View(household)
View(listing)
# National Tab
householdval <- household |> group_by(district, interview__key) |> summarise()
View(householdval)
# National Tab
householdval <- household |> group_by(district, interview__key) |>
summarise(
Questionnaire = n(),
RespondentHHS = summarise(FINALRESULT_hh %in% c(1, 2))
)
# National Tab
householdval <- household |> group_by(district, interview__key) |>
summarise(
Questionnaire = n(),
RespondentHHS = FINALRESULT_hh %in% c(1, 2)
)
View(householdval)
# National Tab
householdval <- household |> group_by(district, interview__key) |>
summarise(
Questionnaire = n(),
RespondentHHS = sum(FINALRESULT_hh %in% c(1, 2))
)
View(householdval)
# National Tab
householdval <- household |>
summarise(
Questionnaire = n(),
RespondentHHS = sum(FINALRESULT_hh %in% c(1, 2))
)
View(householdval)
listingval <- listing |>
summarise(
`Avg Males` = sum(sex = 1)
)
View(listingval)
listingval <- listing |>
summarise(
Avg_Males = sum(sex %in% 1)
)
View(listingval)
listingval <- listing |>
summarise(
Males = sum(sex %in% 1),
Females = sum(sex %in% 2)
) |>
summarise(
Avg_Males = mean(Males)
)
View(listingval)
listingval <- listing |>
summarise(
Males = sum(sex %in% 1),
Females = sum(sex %in% 2)
) |>
Avg_Males = mean(Males)
listingval <- listing |>
summarise(
Males = sum(sex %in% 1),
Females = sum(sex %in% 2)
)
View(listingval)
listingval <- listing |>
summarise(
Males = mean(sex %in% 1),
Females = mean(sex %in% 2)
)
View(listingval)
com <- cbind(householdval, listingval)
View(com)
shiny::runApp()
library(bs4Dash)
library(reactable)
library(shinydashboard)
library(leaflet)
library(webr)
library(dplyr)
# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
# creating a database connection
connectDB <- function(){
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
connection
}
fetchWholeTable <- function(table){
d2 <- connectDB()
data <- dbReadTable(d2, table)
dbDisconnect(d2)
data
}
runApp()
consumption <- fetchWholeTable('hbs_consumption_pattern_roster')
households <- fetchWholeTable('hbs_household')
listing <- fetchWholeTable('hbs_listing_roster')
runApp('main.R')
runApp()
library(shiny); runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
library(shiny); runApp('main.R')
library(shiny); runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
library(bs4Dash)
library(reactable)
library(shinydashboard)
library(leaflet)
library(webr)
library(dplyr)
# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
consumption <- fetchWholeTable('hbs_consumption_pattern_roster')
households <- fetchWholeTable('hbs_household')
listing <- fetchWholeTable('hbs_listing_roster')
connectDB <- function(){
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
return(connection)
}
fetchWholeTable <- function(table){
d2 <- connectDB()
data <- dbReadTable(d2, table)
dbDisconnect(d2)
data
}
fetchQuery <- function(q){
d2 <- connectDB()
data <- dbGetQuery(d2, q)
dbDisconnect(d2)
data
}
consumption <- fetchWholeTable('hbs_consumption_pattern_roster')
households <- fetchWholeTable('hbs_household')
listing <- fetchWholeTable('hbs_listing_roster')
hhvars <- households |> summarise()
View(hhvars)
View(households)
hhvars <- households |> summarise(FINALRESULT_hh)
hhvars <- households |> select(FINALRESULT_hh)
View(hhvars)
hh_vars <-
households |>
summarise(
Questionnaires = n(),
Respondents = sum(FINALRESULT_hh = '2', na.rm = T)
)
hh_vars <-
households |>
summarise(
Questionnaires = n(),
Respondents = sum(FINALRESULT_hh = 2, na.rm = T)
)
View(hh_vars)
hh_vars <-
households |>
summarise(
Questionnaires = n(),
Respondents = sum(FINALRESULT_hh %in% 2, na.rm = T)
)
View(hh_vars)
hh_vars <-
households |>
summarise(
Questionnaires = n(),
Respondents = sum(FINALRESULT_hh = 2, na.rm = T)
)
View(hh_vars)
hh_vars <-
households |>
summarise(
Questionnaires = n(),
Respondents = sum(FINALRESULT_hh %in% 2, na.rm = T)
)
View(hh_vars)
hh_vars <-
households |>
summarise(
Questionnaires = n(),
Respondents = sum(FINALRESULT_hh %in% 1, na.rm = T)
)
View(hhvars)
View(hh_vars)
hh_vars <-
households |>
summarise(
Questionnaires = n(),
Respondents = sum(FINALRESULT_hh %in% 3, na.rm = T)
)
View(hh_vars)
hh_vars <-
households |>
summarise(
`Response %` = paste0(50, '%'),
Respondents = sum(FINALRESULT_hh %in% 3, na.rm = T)
)
View(hh_vars)
hh_vars <-
households |>
summarise(
`Response %` = paste0(50, '%'),
`Complete %` = paste0(45, '%'),
Completed = sum(FINALRESULT_hh %in% 1, na.rm = T),
Partial = sum(FINALRESULT_hh %in% 2, na.rm = T),
`Vacant dwelling` = sum(FINALRESULT_hh %in% 3, na.rm = T),
Refusal = sum(FINALRESULT_hh %in% 4, na.rm = T),
A.N.F = sum(FINALRESULT_hh %in% 5, na.rm = T),
N.S.R = sum(FINALRESULT_hh %in% 6, na.rm = T),
`No Contact` = sum(FINALRESULT_hh %in% 7, na.rm = T),
`Vacant Lot` = sum(FINALRESULT_hh %in% 8, na.rm = T),
U.C/N.L = sum(FINALRESULT_hh %in% 9, na.rm = T),
hh_vars <-
households |>
summarise(
`Response %` = paste0(50, '%'),
`Complete %` = paste0(45, '%'),
Completed = sum(FINALRESULT_hh %in% 1, na.rm = T),
Partial = sum(FINALRESULT_hh %in% 2, na.rm = T),
`Vacant dwelling` = sum(FINALRESULT_hh %in% 3, na.rm = T),
Refusal = sum(FINALRESULT_hh %in% 4, na.rm = T),
`A.N.F` = sum(FINALRESULT_hh %in% 5, na.rm = T),
`N.S.R` = sum(FINALRESULT_hh %in% 6, na.rm = T),
`No Contact` = sum(FINALRESULT_hh %in% 7, na.rm = T),
`Vacant Lot` = sum(FINALRESULT_hh %in% 8, na.rm = T),
`U.C/N.L` = sum(FINALRESULT_hh %in% 9, na.rm = T),
Other = sum(FINALRESULT_hh %in% 10, na.rm = T)
)
View(hh_vars)
hh_vars <-
households |>
group_by(urban_rural) |>
summarise(
`Response %` = paste0(50, '%'),
`Complete %` = paste0(45, '%'),
Completed = sum(FINALRESULT_hh %in% 1, na.rm = T),
Partial = sum(FINALRESULT_hh %in% 2, na.rm = T),
`Vacant Dwelling` = sum(FINALRESULT_hh %in% 3, na.rm = T),
Refusal = sum(FINALRESULT_hh %in% 4, na.rm = T),
`A.N.F` = sum(FINALRESULT_hh %in% 5, na.rm = T),
`N.S.R` = sum(FINALRESULT_hh %in% 6, na.rm = T),
`No Contact` = sum(FINALRESULT_hh %in% 7, na.rm = T),
`Vacant Lot` = sum(FINALRESULT_hh %in% 8, na.rm = T),
`U.C/N.L` = sum(FINALRESULT_hh %in% 9, na.rm = T),
Other = sum(FINALRESULT_hh %in% 10, na.rm = T)
)
View(hh_vars)
hh_val <-
households |>
group_by(urban_rural) |>
summarise(
`Response %` = paste0(50, '%'),
`Complete %` = paste0(45, '%'),
Completed = sum(FINALRESULT_hh %in% 1, na.rm = T),
Partial = sum(FINALRESULT_hh %in% 2, na.rm = T),
`Vacant Dwelling` = sum(FINALRESULT_hh %in% 3, na.rm = T),
Refusal = sum(FINALRESULT_hh %in% 4, na.rm = T),
`A.N.F` = sum(FINALRESULT_hh %in% 5, na.rm = T),
`N.S.R` = sum(FINALRESULT_hh %in% 6, na.rm = T),
`No Contact` = sum(FINALRESULT_hh %in% 7, na.rm = T),
`Vacant Lot` = sum(FINALRESULT_hh %in% 8, na.rm = T),
`U.C/N.L` = sum(FINALRESULT_hh %in% 9, na.rm = T),
Other = sum(FINALRESULT_hh %in% 10, na.rm = T)
)
View(hh_val)
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
hh_val <-
households |>
group_by(urban_rural) |>
summarise(
`Response %` = paste0(Completed, '%'),
`Complete %` = paste0(45, '%'),
Completed = sum(FINALRESULT_hh %in% 1, na.rm = T),
Partial = sum(FINALRESULT_hh %in% 2, na.rm = T),
`Vacant Dwelling` = sum(FINALRESULT_hh %in% 3, na.rm = T),
Refusal = sum(FINALRESULT_hh %in% 4, na.rm = T),
`A.N.F` = sum(FINALRESULT_hh %in% 5, na.rm = T),
`N.S.R` = sum(FINALRESULT_hh %in% 6, na.rm = T),
`No Contact` = sum(FINALRESULT_hh %in% 7, na.rm = T),
`Vacant Lot` = sum(FINALRESULT_hh %in% 8, na.rm = T),
`U.C/N.L` = sum(FINALRESULT_hh %in% 9, na.rm = T),
Other = sum(FINALRESULT_hh %in% 10, na.rm = T)
)
hh_val <-
households |>
group_by(urban_rural) |>
summarise(
`Response %` = paste0(50, '%'),
`Complete %` = paste0(45, '%'),
Completed = sum(FINALRESULT_hh %in% 1, na.rm = T),
Partial = sum(FINALRESULT_hh %in% 2, na.rm = T),
`Vacant Dwelling` = sum(FINALRESULT_hh %in% 3, na.rm = T),
Refusal = sum(FINALRESULT_hh %in% 4, na.rm = T),
`A.N.F` = sum(FINALRESULT_hh %in% 5, na.rm = T),
`N.S.R` = sum(FINALRESULT_hh %in% 6, na.rm = T),
`No Contact` = sum(FINALRESULT_hh %in% 7, na.rm = T),
`Vacant Lot` = sum(FINALRESULT_hh %in% 8, na.rm = T),
`U.C/N.L` = sum(FINALRESULT_hh %in% 9, na.rm = T),
Other = sum(FINALRESULT_hh %in% 10, na.rm = T)
)
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
library(shiny); runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
runApp('main.R')
