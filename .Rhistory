View(PD)
# loading the dataset
#data <- as.data.frame(Titanic);
# Building a table with the data for the plot
PD <- result7 |> group_by(sex) |> summarise(sum(as.integer(as.character(age))))
View(PD)
# loading the dataset
#data <- as.data.frame(Titanic);
# Building a table with the data for the plot
PD <- result7 |> group_by(sex) |> sum(as.integer(as.character(age)))
# loading the dataset
#data <- as.data.frame(Titanic);
# Building a table with the data for the plot
PD <- result7 |> group_by(sex) |> sum(as.integer(as.character(sex)))
# loading the dataset
#data <- as.data.frame(Titanic);
# Building a table with the data for the plot
PD <- result7 |> group_by(sex) |> summarise(as.integer(as.character(age)))
# loading the dataset
#data <- as.data.frame(Titanic);
# Building a table with the data for the plot
PD <- result7 |> group_by(sex) |> summarise(sum(as.integer(as.character(age))))
View(PD)
tablequery6 <- "SELECT sex, COUNT(*) FROM hbs_listing_roster GROUP BY sex";
result7 <- dbGetQuery(connection, tablequery6);
View(result7)
View(result7)
tablequery6 <- "SELECT sex, AVG(*) FROM hbs_listing_roster GROUP BY sex";
result7 <- dbGetQuery(connection, tablequery6);
tablequery6 <- "SELECT sex, COUNT(*) FROM hbs_listing_roster GROUP BY sex";
result7 <- dbGetQuery(connection, tablequery6);
View(result7)
tablequery6 <- "SELECT sex, AVG(COUNT(*)) FROM hbs_listing_roster GROUP BY sex";
result7 <- dbGetQuery(connection, tablequery6);
tablequery6 <- "SELECT sex, COUNT(*) FROM hbs_listing_roster GROUP BY sex";
result7 <- dbGetQuery(connection, tablequery6);
View(result7)
# loading the dataset
#data <- as.data.frame(Titanic);
# Building a table with the data for the plot
PD <- result7 |> group_by(sex) |> summarise(sum(as.integer(as.character(age))))
# loading the dataset
#data <- as.data.frame(Titanic);
# Building a table with the data for the plot
PD <- result7 |> group_by(sex) |> summarise(sum(as.integer(as.character(sex))))
View(PD)
tablequery6 <- "SELECT sex, COUNT(*) / 12 AS average FROM hbs_listing_roster GROUP BY sex";
result7 <- dbGetQuery(connection, tablequery6);
View(PD)
View(result7)
View(result7)
tablequery6 <- "SELECT sex, COUNT(*) AS SUM FROM hbs_listing_roster GROUP BY sex";
result7 <- dbGetQuery(connection, tablequery6);
View(result7)
library(bs4Dash)
library(reactable)
library(shinydashboard)
library(leaflet)
library(webr)
library(dplyr)
# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
tablequery6 <- "SELECT sex, COUNT(*) AS SUM FROM hbs_listing_roster GROUP BY sex";
result7 <- dbGetQuery(connection, tablequery6);
View(result7)
library(shiny); runApp('main.R')
library(bs4Dash)
library(reactable)
library(shinydashboard)
library(leaflet)
library(webr)
library(dplyr)
# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
belize_hbs_4 <- read_sav('./SPSS_FOLDER/belize_hbs_4.sav', user_na = TRUE);
View(belize_hbs_4)
View(belize_hbs_4)
questnum <- nrow(req(belize_hbs_4));
print(questnum)
datatable <- data.frame(
price_USD = c(123456.56, 132, 5650.12),
price_INR = c(350, 23208.552, 1773156.4),
number_FR = c(123456.56, 132, 5650.12),
temp = c(22, NA, 31),
percent = c(0.9525556, 0.5, 0.112),
date = as.Date(c("2019-01-02", "2019-03-15", "2019-09-22"))
)
reactable(datatable, columns = list(
price_USD = colDef(format = colFormat(prefix = "$", separators = TRUE, digits = 2)),
price_INR = colDef(format = colFormat(currency = "INR", separators = TRUE, locales = "hi-IN")),
number_FR = colDef(format = colFormat(locales = "fr-FR")),
temp = colDef(format = colFormat(suffix = " Â°C")),
percent = colDef(format = colFormat(percent = TRUE, digits = 1)),
date = colDef(format = colFormat(date = TRUE, locales = "en-GB"))
))
View(datatable)
datatable <- data.frame(
price_USD = questnum
)
View(datatable)
reactable(datatable
)
View(belize_hbs_4)
malecount <- "SELECT sex, COUNT(*) AS SUM FROM hbs_listing_roster WHERE sex = 1";
avgmale <- dbGetQuery(connection, malecount);
View(avgmale)
listingroster <- "SELECT * FROM hbs_listing_roster";
LRresults <- dbGetQuery(connection, listingroster);
View(LRresults)
avgmale <- dbGetQuery(connection, malecount);
femalecount <- "SELECT COUNT(*) AS SUM FROM hbs_listing_roster WHERE sex = 2";
avgfemale <- dbGetQuery(connection, femalecount);
View(avgmale)
View(avgfemale)
View(avgfemale)
malecount <- "SELECT COUNT(*) AS SUM FROM hbs_listing_roster WHERE sex = 1";
avgmale <- dbGetQuery(connection, malecount);
View(avgmale)
View(avgfemale)
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
Avg_Males = avgmale,
Avg_Females = avgfemale,
Avg_HH_Size = avgmale + avgfemale
)
View(connection)
View(datatable)
reactable(datatable
)
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
avgmale,
avgfemale,
avgmale + avgfemale
)
View(datatable)
malecount <- "SELECT COUNT(*) AS Avg_Males FROM hbs_listing_roster WHERE sex = 1";
avgmale <- dbGetQuery(connection, malecount);
femalecount <- "SELECT COUNT(*) AS Avg_Females FROM hbs_listing_roster WHERE sex = 2";
avgfemale <- dbGetQuery(connection, femalecount);
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
avgmale,
avgfemale,
avgmale + avgfemale
)
View(datatable)
avghhsize = avgmale + avgfemale;
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize
)
View(datatable)
avghhsize <- avgmale + avgfemale;
View(avghhsize)
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize |> rename("Avg_HH_Size")
)
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize |> rename(avghhsize, "Avg_HH_Size")
)
View(datatable)
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize |> rename("Avg_HH_Size" = avghhsize)
)
View(avghhsize)
avghhsize <- avgmale + avgfemale |> rename("Avg_HH_Size" = avgmale);
View(avghhsize)
avghhsize <- avgmale + avgfemale;
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize
)
View(datatable)
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
avgmale/4,
avgfemale,
avghhsize
)
View(datatable)
colnames(datatable) <- c('Questionnaires','Respondent_HHS','Avg_Males', 'Avg_Females', 'Avg_HH_Size')
View(datatable)
datatable <- data.frame(
questionnaires = questnum,
respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize
)
colnames(datatable) <- c('Questionnaires','Respondent_HHS','Avg_Males', 'Avg_Females', 'Avg_HH_Size')
View(datatable)
library(bs4Dash)
library(reactable)
library(shinydashboard)
library(leaflet)
library(webr)
library(dplyr)
# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
belize_hbs_4 <- read_sav('./SPSS_FOLDER/belize_hbs_4.sav', user_na = TRUE);
listingroster <- "SELECT * FROM hbs_listing_roster";
LRresults <- dbGetQuery(connection, listingroster);
malecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 1";
avgmale <- dbGetQuery(connection, malecount);
femalecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 2";
avgfemale <- dbGetQuery(connection, femalecount);
avghhsize <- avgmale + avgfemale;
questnum <- nrow(req(belize_hbs_4));
datatable <- data.frame(
questionnaires = questnum,
respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize
)
colnames(datatable) <- c('Questionnaires','Respondent_HHS','Avg_Males', 'Avg_Females', 'Avg_HH_Size')
questnum <- nrow(req(belize_hbs_4));
questnum <- nrow(req(belize_hbs_4));
questnum <- nrow(req(belize_hbs_4));
questnum <- nrow(belize_hbs_4);
datatable <- data.frame(
questionnaires = questnum,
respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize
)
colnames(datatable) <- c('Questionnaires','Respondent_HHS','Avg_Males', 'Avg_Females', 'Avg_HH_Size')
View(datatable)
View(LRresults)
View(LRresults)
View(belize_hbs_4)
rural_urban <- c("rural", "urban")
datatable <- data.frame(
rural_urban,
questionnaires = questnum,
respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize
)
View(datatable)
datatable <- data.frame(
rural_urban,
questionnaires = c(questnum, 100),
respondent_HHS = 10,
avgmale,
avgfemale,
avghhsize
)
View(datatable)
URdatatable <- data.frame(
rural_urban,
questionnaires = c(questnum, 19),
respondent_HHS = c(14,10),
avg_male = c(avgmale, 15),
avgfemale,
avghhsize
)
View(URdatatable)
colnames(datatable) <- c('Rural_Urban', 'Questionnaires','Respondent_HHS','Avg_Males', 'Avg_Females', 'Avg_HH_Size')
colnames(URdatatable) <- c('Rural_Urban', 'Questionnaires','Respondent_HHS','Avg_Males', 'Avg_Females', 'Avg_HH_Size')
View(URdatatable)
URdatatable <- data.frame(
rural_urban,
questionnaires = c(questnum, 19),
respondent_HHS = c(14,10),
avg_male = avgmale,
avgfemale,
avghhsize
)
colnames(URdatatable) <- c('Rural_Urban', 'Questionnaires','Respondent_HHS','Avg_Males', 'Avg_Females', 'Avg_HH_Size')
View(URdatatable)
avgmalenum <- avgmale[1,1];
avgfemalenum <- avgfemale[1,1];
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
Avg_Males = avgmalenum,
Avg_Females = avgfemalenum,
Avg_HH_Size = avgmalenum + avgfemalenum
)
View(datatable)
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
Avg_Males = avgmale[1,1],
Avg_Females = avgfemalenum,
Avg_HH_Size = avgmalenum + avgfemalenum
)
View(datatable)
library(bs4Dash)
library(reactable)
library(shinydashboard)
library(leaflet)
library(webr)
library(dplyr)
# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
belize_hbs_4 <- read_sav('./SPSS_FOLDER/belize_hbs_4.sav', user_na = TRUE);
listingroster <- "SELECT * FROM hbs_listing_roster";
LRresults <- dbGetQuery(connection, listingroster);
malecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 1";
avgmale <- dbGetQuery(connection, malecount);
femalecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 2";
avgfemale <- dbGetQuery(connection, femalecount);
questnum <- nrow(belize_hbs_4);
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
Avg_Males = avgmale[1,1],
Avg_Females = avgmale[1,1],
Avg_HH_Size = avgmalenum + avgfemalenum
)
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
Avg_Males = avgmale[1,1],
Avg_Females = avgmale[1,1],
Avg_HH_Size = avgmale[1,1] + avgfemale[1,1]
)
View(datatable)
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
Avg_Males = avgmale[1,1],
Avg_Females = avgfemale[1,1],
Avg_HH_Size = avgmale[1,1] + avgfemale[1,1]
)
View(datatable)
Rquestnum <- belize_hbs_4 |> group_by(urban_rural)
View(Rquestnum)
Rquestnum <- belize_hbs_4 |> group_by(urban_rural) |> nrow()
Rquestnum <- belize_hbs_4 |> group_by(urban_rural) |> summarise()
View(Rquestnum)
Rquestnum <- belize_hbs_4 |> group_by(urban_rural) |> summarise(n = nrow(group_by(urban_rural)))
Rquestnum <- belize_hbs_4 |> group_by(urban_rural) |> nrow() |> summarise()
Rquestnum <- belize_hbs_4 |> group_by(urban_rural) |> summarise(n = n())
View(Rquestnum)
Rquestnum[1,2]
RUquestnum <- belize_hbs_4 |> group_by(urban_rural) |> summarise(n = n())
View(RUquestnum)
View(belize_hbs_4)
View(avgmale)
View(belize_hbs_4)
View(Rquestnum)
View(Rquestnum)
View(RUquestnum)
library(shiny); runApp('main.R')
library(bs4Dash)
library(reactable)
library(shinydashboard)
library(leaflet)
library(webr)
library(dplyr)
# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
#library("plyr")
library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connection <- dbConnect(RMySQL::MySQL(),
dbname = Sys.getenv("MYSQL_SURVEY_DB"),
host = Sys.getenv("MYSQL_HOST"),
port = 3306,
user = Sys.getenv("MYSQL_USER"),
password = Sys.getenv("MYSQL_PWD"))
set_credentials(
server = "http://hqsurveys.sib.org.bz",
workspace = "hbs",
user = "gapi",
password = "API4statistics!"
)
belize_hbs_4 <- read_sav('./SPSS_FOLDER/belize_hbs_4.sav', user_na = TRUE);
listingroster <- "SELECT * FROM hbs_listing_roster";
LRresults <- dbGetQuery(connection, listingroster);
malecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 1";
avgmale <- dbGetQuery(connection, malecount);
femalecount <- "SELECT COUNT(*) AS sum FROM hbs_listing_roster WHERE sex = 2";
avgfemale <- dbGetQuery(connection, femalecount);
questnum <- nrow(belize_hbs_4);
datatable <- data.frame(
Questionnaires = questnum,
Respondent_HHS = 10,
Avg_Males = avgmale[1,1],
Avg_Females = avgfemale[1,1],
Avg_HH_Size = avgmale[1,1] + avgfemale[1,1]
)
View(datatable)
library(RMariaDB)
tibble::as_tibble(dbGetQuery(connection, "SHOW ENGINES"))
dbGetQuery(connection, "SHOW GLOBAL VARIABLES LIKE 'default_storage_engine'")
dbExecute(connection, "SET SESSION storage_engine=myisam")
dbGetQuery(connection, "SHOW GLOBAL VARIABLES LIKE 'default_storage_engine'")
dbExecute(connection, "SET SESSION storage_engine=myisam")
dbWriteTable(connection,"hbs_household",belize_hbs_4,overwrite=T)
dbReadTable(connection, "hbs_household")
query <- "show tables";
result <- dbGetQuery(connection,query);
View(result)
