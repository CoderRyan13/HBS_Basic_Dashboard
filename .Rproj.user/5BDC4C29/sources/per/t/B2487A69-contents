# importing the library
library("devtools")
devtools::install_github("arthur-shaw/susoapi")
library("susoapi")
library("tidyverse")
library("haven")
library("plyr")

library(DBI)
library(RMySQL)
library(ggplot2)
# creating a database connection
connection <- dbConnect(RMySQL::MySQL(), 
                        dbname = "survey_dashboards", 
                        host = "200.32.244.19", 
                        port = 3306, 
                        user = "gaguilar", 
                        password = "P@ssw0rd10")


set_credentials(
  server = "http://hqsurveys.sib.org.bz",
  workspace = "hbs",
  user = "gapi",
  password = "API4statistics!"
)

# Test if connection was made
# query <- "show tables";
# result <- dbGetQuery(connection,query);
# print(result)

tablequery1 <- "SELECT * FROM hbs_consumption_pattern_roster";
result1 <- dbGetQuery(connection,tablequery1);

tablequery2 <- "SELECT * FROM hbs_ff_roster";
result2 <- dbGetQuery(connection,tablequery2);

tablequery3 <- "SELECT * FROM hbs_listing_roster";
result3 <- dbGetQuery(connection,tablequery3);

tablequery4 <- "SELECT * FROM hbs_transportation_1";
result4 <- dbGetQuery(connection,tablequery4);

tablequery5 <- "SELECT * FROM hbs_transportation_2";
result5 <- dbGetQuery(connection,tablequery5);

plotquery1 <- "SELECT name, age FROM hbs_listing_roster";
result6 <- dbGetQuery(connection, plotquery1);

result7 <- c(2, 4, 1, 5, 10);

ui <- fluidPage(
  theme = bslib::bs_theme(bootswatch = "flatly"),
  titlePanel("HBS Dashboard"),
  navlistPanel( widths = c(2, 10),
    id = "tabset", 
    "HBS",
    tabPanel("HBS Tables", 
             tabsetPanel(
               id = "tabletabset",
               tabPanel("Consumption Pattern Roster", fluidPage(
                 h4("HBS Consumption Pattern Roster"),
                 dataTableOutput("hbstable1")
                )
               ),
               tabPanel("FF Roster", fluidPage(
                 h4("HBS FF Roster"),
                 dataTableOutput("hbstable2")
                )
               ),
               tabPanel("Listing Roster", fluidPage(
                 h4("HBS Listing Roster"),
                 dataTableOutput("hbstable3")
                )
               ),
               navbarMenu("Transportation", 
                          tabPanel("Transportation 1", fluidPage(
                            h4("HBS Transportation 1"),
                            dataTableOutput("hbstable4")
                          )
                          ),
                          tabPanel("Transportation 2", fluidPage(
                            h4("HBS Transportation 2"),
                            dataTableOutput("hbstable5")
                          )
                          ),
               )
             )
             ),
    tabPanel("HBS Graphs", 
             tabsetPanel(
               id="graphtabset",
               tabPanel("Listing Roster", fluidPage(
                 h4("Listing Roster Graph"),
                 plotOutput("plot")
               )
              ),
               tabPanel("Consumption Pattern Roster", fluidPage(
                 h4("Graph 1")
               )
              ),
             )
           ),
    # "Heading 2",
    tabPanel("panel 3", fluidPage(
      fileInput("file", "Data", buttonLabel = "Upload..."),
      textInput("delim", "Delimiter (leave blank to guess)", ""),
      numericInput("skip", "Rows to skip", 0, min = 0),
      numericInput("rows", "Rows to preview", 10, min = 1)
    )
    )
  )
)

server <- function(input, output, session) {
  output$hbstable1 <- renderDataTable(result1);
  output$hbstable2 <- renderDataTable(result2);
  output$hbstable3 <- renderDataTable(result3);
  output$hbstable4 <- renderDataTable(result4);
  output$hbstable5 <- renderDataTable(result5);
  output$plot <- renderPlot(
    # barplot(result6)
    ggplot(result6, aes(x = name, y = age)) + 
      geom_col(fill = "#A1B887") +
      labs(
        title = "People and their ages",
        subtitle = "A simple bar chart",
        caption = "Source: Me"
      ) +
      theme(
        plot.title = element_text(hjust = 0.5, size = 15),
        plot.subtitle = element_text(hjust = 1),
        plot.caption = element_text(hjust = 0)
      )
  )
  
}

shinyApp(ui, server)